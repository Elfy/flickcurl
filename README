
             Flickcurl: A C library for the Flickr Web Service API

[1]Dave Beckett

   Flickcurl is a library for calling the core Flickr web service API,
   handling the API signing and the token management plus providing
   wrappers for a few APIs that I needed to use to get information out of
   photo machine tags.

   License: LGPL/GPL/Apache 2.0

   It requires the following libraries to build it:
     * [2]libcurl
     * [3]libxml2

   The do the usual ./configure, make and make install sequence to
   install the library and the flickcurl and triplr utilities.

Flickr API Configuration

   The ~/.flickcurl.conf file should contain the Flickr authentication
   details in the form:
[flickr]
auth_token=1234567-8901234567890123
api_key=0123456789abcdef0123456789abcdef
secret=fedcba9876543210

Utility programs

     * flickcurl - which can call the web service sAPIs plus help turn
       frobs into auth_tokens and writing the ~/.flickcurl.conf file.
Flickr API utility 0.4
Call the Flickr API to get information.
Usage: flickcurl [OPTIONS] command args...

Copyright (C) 2007 David Beckett - http://purl.org/net/dajobe/
License: LGPL 2.1 or newer, GPL 2 or newer, Apache 2.0 or newer.
See http://flickcurl.sf.net/LICENSE.html for full terms.
Flickcurl home page: http://flickcurl.sf.net/

  -h, --help              Print this help, then exit
  -v, --version           Print the flickcurl version

Commands
  test-echo             Test echo - KEY VALUE
  photos-getInfo        Get information about a photo - PHOTO-ID
     * triplr - generate RDF triples from a Flickr photo
Triplr - triples from flickrs 0.4
Get Triples from Flickr photos.
Usage: triplr [OPTIONS] FLICKR-PHOTO-URI

Copyright (C) 2007 David Beckett - http://purl.org/net/dajobe/
License: LGPL 2.1 or newer, GPL 2 or newer, Apache 2.0 or newer.
See http://flickcurl.sf.net/LICENSE.html for full terms.
Flickcurl home page: http://flickcurl.sf.net/

  -d, --debug             Print lots of output
  -h, --help              Print this help, then exit
  -o, --output FORMAT     Choose output format 'ntriples' or 'turtle'
  -v, --version           Print the flickcurl version

API calls supported

   auth.getFullToken - turn a frob into an auth_token
char* flickcurl_auth_getFullToken(flickcurl* fc, const char* frob);

   flickr.photos.getInfo - get information about a photo
flickcurl_photo* flickcurl_photos_getInfo(flickcurl *fc, const char* photo_id);

   flickr.test.echo - echo what is sent
int flickcurl_test_echo(flickcurl* fc, const char* key, const char* value);

Library use example

  flickcurl *fc;

  fc=flickcurl_new();

  flickcurl_set_api_key(fc, "...");
  flickcurl_set_shared_secret(fc, "...");
  flickcurl_set_auth_token(fc, "...");

  /* or more likely, read some of the above from a config file */

  photo=flickcurl_photos_getInfo(fc, "photo-id");

  flickcurl_photo_field field;
  for(field=0; field <= PHOTO_FIELD_LAST; field++) {
    flickcurl_field_value_type datatype=photo->fields[field].type;

    if(datatype == VALUE_TYPE_NONE)
      continue;

    fprintf(stderr, "field %s (%d) with %s value: '%s' / %d\n",
            flickcurl_get_photo_field_label(field), field,
            flickcurl_get_field_value_type_label(datatype),
            photo->fields[field].string, photo->fields[field].integer);
  }

  int i;
  for(i=0; i < photo->tags_count; i++) {
    flickcurl_tag* tag=photo->tags[i];
    fprintf(stderr, "%d) %s tag: id %s author %s raw '%s' cooked '%s'\n",
            i, (tag->machine_tag ? "machine" : "regular"),
            tag->id, tag->author, tag->raw, tag->cooked);
  }

  free_flickcurl_photo(photo);

  flickcurl_free(fc);
     _________________________________________________________________

   Copyright (C) 2007 [4]Dave Beckett

References

   1. http://purl.org/net/dajobe/
   2. http://curl.haxx.se/libcurl/
   3. http://xmlsoft.org/
   4. http://purl.org/net/dajobe/
